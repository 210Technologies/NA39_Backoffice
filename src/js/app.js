import angular from 'angular';

// Import our app config files
import constants  from './config/app.constants';
import appConfig  from './config/app.config';
import appRun     from './config/app.run';
import 'angular-ui-router';
import 'angular-jwt';
import 'angular-file-upload';
import 'angular-ui-bootstrap';
// Import our templates file (generated by Gulp)
import './config/app.templates';
// Import our app functionaity
import './layout';
import './components';
import './home';
import './profile';
import './article';
import './services';
import './auth';
import './videos';
import './photos';
import './items';
import './exercises';
import './workouts';

// Create and bootstrap application
const requires = [
  'ui.router',
  'angular-jwt',
  'ui.bootstrap',
  'templates',
  'angularFileUpload',
  'app.layout',
  'app.components',
  'app.home',
  'app.profile',
  'app.article',
  'app.services',
  'app.auth',
  'app.videos',
  'app.photos',
  'app.items',
  'app.exercises',
  'app.workouts'
];

// Mount on window for testing
window.app = angular.module('app', requires);

angular.module('app').constant('AppConstants', constants);

angular.module('app').config(appConfig);

angular.module('app').run(appRun);
app.directive('mixitup',function(){
    var linker = function(scope,element,attrs) {
        scope.$watch('entities', function(){
            element.mixitup();
            // how to tell mixitup to reload the data
        });
         
    };
    
    return {
        restrict:'A',
        link: linker,
        scope:{entities:'='}
    }
})

app.directive('ngThumb', ['$window', function($window) {
        var helper = {
            support: !!($window.FileReader && $window.CanvasRenderingContext2D),
            isFile: function(item) {
                return angular.isObject(item) && item instanceof $window.File;
            },
            isImage: function(file) {
                var type =  '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';
                return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;
            }
        };

        return {
            restrict: 'A',
            template: '<canvas/>',
            link: function(scope, element, attributes) {
                if (!helper.support) return;

                var params = scope.$eval(attributes.ngThumb);
                if (!helper.isFile(params.file)) return;
                if (!helper.isImage(params.file)) return;


                var canvas = element.find('canvas');
                var reader = new FileReader();

                reader.onload = onLoadFile;
                reader.readAsDataURL(params.file);

                function onLoadFile(event) {
                    var img = new Image();
                    img.onload = onLoadImage;
                    img.src = event.target.result;
                }

                function onLoadImage() {
                  canvas.css('width', '100%').css('height', '100%')
                  var ratioy = parseFloat(element[0].offsetHeight / this.height)
                  var ratiox = parseFloat(element[0].offsetWidth / this.width)
                  var ratio = Math.min(ratiox, ratioy);
                  var newWidth = parseInt(this.width * ratio);
            var newHeight = parseInt(this.height * ratio);
            var x = element[0].offsetWidth / 2 - newWidth / 2
            var y = element[0].offsetHeight / 2 - newHeight / 2
                    canvas[0].getContext('2d').drawImage(this, 0, 0, newWidth, newHeight);
                }
            }
        };
    }])
angular.bootstrap(document, ['app'], {
  strictDi: true
});
